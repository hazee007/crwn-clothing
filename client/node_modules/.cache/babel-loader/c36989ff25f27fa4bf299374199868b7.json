{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\ECommerce\\\\crwn-clothing\\\\src\\\\components\\\\sign-up\\\\sign-up.components.jsx\";\nimport React from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './sign-up.style.scss';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        signUpStart\n      } = this.props;\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n      signUpStart(displayName, email, password, confirmPassword);\n\n      if (password !== confirmPassword) {\n        alert(\"passwords don't match\");\n        return;\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \" I do not have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" SIGN UP\")));\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/user/Desktop/ECommerce/crwn-clothing/src/components/sign-up/sign-up.components.jsx"],"names":["React","FormInput","CustomButton","signUpStart","connect","SignUp","Component","constructor","handleSubmit","event","preventDefault","props","displayName","email","password","confirmPassword","state","alert","handleChange","name","value","target","setState","render","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport './sign-up.style.scss';\r\nimport {signUpStart} from '../../redux/user/user.actions'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nclass SignUp extends React.Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state ={\r\n            displayName: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        }\r\n        \r\n    }\r\n\r\n    handleSubmit = async event =>{\r\n        event.preventDefault();\r\n\r\n        const {signUpStart} = this.props\r\n        const {displayName, email, password, confirmPassword} = this.state;\r\n\r\n        signUpStart(displayName, email, password, confirmPassword);\r\n        \r\n        if(password !== confirmPassword){\r\n            alert(\"passwords don't match\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    handleChange = event =>{\r\n        const {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render(){\r\n        const {displayName, email, password, confirmPassword} = this.state;\r\n        return(\r\n            <div className='sign-up'>\r\n                <h2 className='title'> I do not have an account</h2>\r\n                <span>Sign up with your email and password</span>\r\n\r\n                <form className='sign-up-form' onSubmit={this.handleSubmit}>\r\n                    <FormInput type='text' name='displayName' \r\n                    value={displayName} \r\n                    onChange={this.handleChange} \r\n                    label='Display Name' required />\r\n                    \r\n                    <FormInput type='email' name='email' \r\n                    value={email} \r\n                    onChange={this.handleChange} \r\n                    label='Email' required />\r\n\r\n                    <FormInput type='password' name='password' \r\n                    value={password} \r\n                    onChange={this.handleChange} \r\n                    label='Password' required />\r\n\r\n                    <FormInput type='password' name='confirmPassword' \r\n                    value={confirmPassword} \r\n                    onChange={this.handleChange} \r\n                    label='Confirm Password' required />\r\n\r\n                    <CustomButton type='submit' > SIGN UP</CustomButton>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    signUpStart: userCredentials =>\r\n    dispatch(signUpStart(userCredentials))\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps) (SignUp);"]},"metadata":{},"sourceType":"module"}