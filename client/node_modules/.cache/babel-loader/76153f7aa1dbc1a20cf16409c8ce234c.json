{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\ECommerce\\\\crwn-clothing\\\\client\\\\src\\\\components\\\\sign-up\\\\sign-up.components.jsx\";\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './sign-up.style.scss';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, SetuserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    SetuserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \" I do not have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \" SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/user/Desktop/ECommerce/crwn-clothing/client/src/components/sign-up/sign-up.components.jsx"],"names":["React","useState","FormInput","CustomButton","signUpStart","connect","SignUp","userCredentials","SetuserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAO,sBAAP;AACA,SAAQC,WAAR,QAA0B,+BAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAIA,MAAMC,MAAM,GAAE,CAAC;AAACF,EAAAA;AAAD,CAAD,KAAoB;AAC9B,QAAM,CAACG,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC;AACnDQ,IAAAA,WAAW,EAAE,EADsC;AAEnDC,IAAAA,KAAK,EAAE,EAF4C;AAGnDC,IAAAA,QAAQ,EAAE,EAHyC;AAInDC,IAAAA,eAAe,EAAE;AAJkC,GAAD,CAAtD;AAQA,QAAM;AAACH,IAAAA,WAAD;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA;AAA/B,MAAkDL,eAAxD;;AACA,QAAMM,YAAY,GAAG,MAAMC,KAAN,IAAc;AAC/BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAGJ,QAAQ,KAAKC,eAAhB,EAAgC;AAC5BI,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACA;AACH;;AAEDZ,IAAAA,WAAW,CAAC;AAACK,MAAAA,WAAD;AAAcC,MAAAA,KAAd;AAAqBC,MAAAA;AAArB,KAAD,CAAX;AAEH,GAVD;;AAYA,QAAMM,YAAY,GAAGH,KAAK,IAAG;AACzB,UAAM;AAACI,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBL,KAAK,CAACM,MAA5B;AACAZ,IAAAA,kBAAkB,CAAC,EAAC,GAAGD,eAAJ;AAAqB,OAACW,IAAD,GAAQC;AAA7B,KAAD,CAAlB;AACH,GAHD;;AAKI,SACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFJ,EAII;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,QAAQ,EAAEN,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,MAAhB;AAAuB,IAAA,IAAI,EAAC,aAA5B;AACA,IAAA,KAAK,EAAEJ,WADP;AAEA,IAAA,QAAQ,EAAEQ,YAFV;AAGA,IAAA,KAAK,EAAC,cAHN;AAGqB,IAAA,QAAQ,MAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,OAAhB;AAAwB,IAAA,IAAI,EAAC,OAA7B;AACA,IAAA,KAAK,EAAEP,KADP;AAEA,IAAA,QAAQ,EAAEO,YAFV;AAGA,IAAA,KAAK,EAAC,OAHN;AAGc,IAAA,QAAQ,MAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAWI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,UAAhB;AAA2B,IAAA,IAAI,EAAC,UAAhC;AACA,IAAA,KAAK,EAAEN,QADP;AAEA,IAAA,QAAQ,EAAEM,YAFV;AAGA,IAAA,KAAK,EAAC,UAHN;AAGiB,IAAA,QAAQ,MAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,EAgBI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,UAAhB;AAA2B,IAAA,IAAI,EAAC,iBAAhC;AACA,IAAA,KAAK,EAAEL,eADP;AAEA,IAAA,QAAQ,EAAEK,YAFV;AAGA,IAAA,KAAK,EAAC,kBAHN;AAGyB,IAAA,QAAQ,MAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,EAqBI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBJ,CAJJ,CADJ;AA8BH,CAzDL;;AA2DA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAI;AACnClB,EAAAA,WAAW,EAAEG,eAAe,IAC5Be,QAAQ,CAAClB,WAAW,CAACG,eAAD,CAAZ;AAF2B,CAAJ,CAAnC;;AAKA,eAAeF,OAAO,CAAC,IAAD,EAAMgB,kBAAN,CAAP,CAAkCf,MAAlC,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport './sign-up.style.scss';\r\nimport {signUpStart} from '../../redux/user/user.actions'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nconst SignUp =({signUpStart}) =>  {\r\n    const [userCredentials, SetuserCredentials] = useState({\r\n        displayName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    })\r\n  \r\n\r\n    const {displayName, email, password, confirmPassword} = userCredentials\r\n    const handleSubmit = async event =>{\r\n        event.preventDefault();\r\n\r\n        if(password !== confirmPassword){\r\n            alert(\"passwords don't match\");\r\n            return;\r\n        }\r\n\r\n        signUpStart({displayName, email, password});\r\n\r\n    }\r\n\r\n    const handleChange = event =>{\r\n        const {name, value} = event.target;\r\n        SetuserCredentials({...userCredentials, [name]: value});\r\n    }\r\n\r\n        return(\r\n            <div className='sign-up'>\r\n                <h2 className='title'> I do not have an account</h2>\r\n                <span>Sign up with your email and password</span>\r\n\r\n                <form className='sign-up-form' onSubmit={handleSubmit}>\r\n                    <FormInput type='text' name='displayName' \r\n                    value={displayName} \r\n                    onChange={handleChange} \r\n                    label='Display Name' required />\r\n                    \r\n                    <FormInput type='email' name='email' \r\n                    value={email} \r\n                    onChange={handleChange} \r\n                    label='Email' required />\r\n\r\n                    <FormInput type='password' name='password' \r\n                    value={password} \r\n                    onChange={handleChange} \r\n                    label='Password' required />\r\n\r\n                    <FormInput type='password' name='confirmPassword' \r\n                    value={confirmPassword} \r\n                    onChange={handleChange} \r\n                    label='Confirm Password' required />\r\n\r\n                    <CustomButton type='submit' > SIGN UP</CustomButton>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    signUpStart: userCredentials =>\r\n    dispatch(signUpStart(userCredentials))\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps) (SignUp);"]},"metadata":{},"sourceType":"module"}