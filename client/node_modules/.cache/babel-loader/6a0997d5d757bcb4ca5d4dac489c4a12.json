{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\ECommerce\\\\crwn-clothing\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport HomePage from './pages/homepage/homepage.components';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport CheckoutPage from './pages/checkout/checkout.components';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './redux/user/user.actions';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCurrentUser } from './redux/user/user.selector';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {// const {setCurrentUser} = this.props;\n    // this.unsubscribeFromAuth = auth.onAuthStateChanged( async userAuth =>{\n    //   // getting data from firebase to add into our state\n    //   if(userAuth){\n    //     const userRef = await createUserProfileDocument(userAuth); //checking if there has been any user update in db \n    //     userRef.onSnapshot(snapShot =>{  //get data of either newly registerd user with already users in db\n    //       setCurrentUser({\n    //         id: snapShot.id,\n    //         ...snapShot.data()\n    //       })\n    //     })\n    //   }\n    //    else{\n    //     setCurrentUser(userAuth)\n    //   }\n    // })\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }) : React.createElement(SignInAndSignUpPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n}); //we get the state of the user to know if the user is logged in, if so we dont want them  to be able to access the singin page and also using reselect for optimization\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["C:/Users/user/Desktop/ECommerce/crwn-clothing/src/App.js"],"names":["React","HomePage","ShopPage","Header","SignInAndSignUpPage","CheckoutPage","Route","Switch","Redirect","connect","setCurrentUser","createStructuredSelector","selectCurrentUser","App","Component","unsubscribeFromAuth","componentDidMount","componentWillUnmount","render","props","currentUser","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AAGA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,cAAR,QAA6B,2BAA7B;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAASC,iBAAT,QAAkC,4BAAlC;;AAIA,MAAMC,GAAN,SAAkBb,KAAK,CAACc,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAGhCC,mBAHgC,GAGV,IAHU;AAAA;;AAKhCC,EAAAA,iBAAiB,GAAE,CAEjB;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACD;;AAEDC,EAAAA,oBAAoB,GAAE;AACnB,SAAKF,mBAAL;AACF;;AACDG,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEjB,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,KAAD;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,SAAS,EAAEC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,SAAlB;AAA4B,MAAA,MAAM,EAAE,MAAM,KAAKiB,KAAL,CAAWC,WAAX,GACtC,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADsC,GACb,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EAMA,oBAAC,KAAD;AAAQ,MAAA,KAAK,MAAb;AAAc,MAAA,IAAI,EAAC,WAAnB;AAA+B,MAAA,SAAS,EAAEf,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANA,CAFF,CADF;AAaD;;AA7C+B;;AAgDlC,MAAMgB,eAAe,GAAGV,wBAAwB,CAAC;AAC/CS,EAAAA,WAAW,EAACR;AADmC,CAAD,CAAhD,C,CAEqB;;AAIrB,eAAeH,OAAO,CAACY,eAAD,CAAP,CAA2BR,GAA3B,CAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport HomePage from './pages/homepage/homepage.components';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport CheckoutPage from './pages/checkout/checkout.components';\n\n\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {setCurrentUser} from './redux/user/user.actions'\nimport {createStructuredSelector} from 'reselect';\nimport { selectCurrentUser } from './redux/user/user.selector';\n\n\n\nclass App extends React.Component { \n  \n\n  unsubscribeFromAuth = null\n\n  componentDidMount(){\n\n    // const {setCurrentUser} = this.props;\n\n    // this.unsubscribeFromAuth = auth.onAuthStateChanged( async userAuth =>{\n    //   // getting data from firebase to add into our state\n    //   if(userAuth){\n    //     const userRef = await createUserProfileDocument(userAuth); //checking if there has been any user update in db \n        \n    //     userRef.onSnapshot(snapShot =>{  //get data of either newly registerd user with already users in db\n    //       setCurrentUser({\n    //         id: snapShot.id,\n    //         ...snapShot.data()\n    //       })\n    //     })\n    //   }\n    //    else{\n    //     setCurrentUser(userAuth)\n    //   }\n        \n    // })\n  }\n  \n  componentWillUnmount(){\n     this.unsubscribeFromAuth();\n  }\n  render(){\n    return (\n      <div >\n        <Header />\n        <Switch>\n        <Route exact path='/' component={HomePage} />\n        <Route  path='/shop' component={ShopPage} />\n        <Route exact path='/signin' render={() => this.props.currentUser ?\n           (<Redirect to ='/' />) : (<SignInAndSignUpPage />)} />  \n        {/* //base on currentUser go to sign up page or go to home page */}\n        <Route  exact path='/checkout' component={CheckoutPage}/>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser:selectCurrentUser\n})                   //we get the state of the user to know if the user is logged in, if so we dont want them  to be able to access the singin page and also using reselect for optimization\n\n\n\nexport default connect(mapStateToProps ) (App);\n"]},"metadata":{},"sourceType":"module"}