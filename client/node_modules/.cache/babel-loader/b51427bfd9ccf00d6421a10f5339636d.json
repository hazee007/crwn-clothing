{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\ECommerce\\\\crwn-clothing\\\\src\\\\components\\\\cart-dropdown\\\\cart-dropdown.components.jsx\";\nimport React from 'react';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './cart-dropdown.style.scss';\nimport { connect } from 'react-redux';\nimport CartItem from '../cart-item/cart-item.components';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\n\nconst CartDropDown = ({\n  cartItems\n}) => React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"cart-items\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, cartItems.map(cartItem => React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}))), React.createElement(CustomButton, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, \"GO TO CHECKOUT\")); // const mapStateToProps = ({cart: {cartItems}}) =>({\n//     cartItems\n// });  this is replaced with the new code so that our application do not rerender(reload) when a state change in the app that does not affect this particular state /// this is what selectors are for..\n\n\nconst mapStateToProps = state => ({\n  cartItems: selectCartItems(state)\n});\n\nexport default connect(mapStateToProps)(CartDropDown);","map":{"version":3,"sources":["C:/Users/user/Desktop/ECommerce/crwn-clothing/src/components/cart-dropdown/cart-dropdown.components.jsx"],"names":["React","CustomButton","connect","CartItem","selectCartItems","CartDropDown","cartItems","map","cartItem","id","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAO,4BAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,mCAArB;AACA,SAASC,eAAT,QAAgC,iCAAhC;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KACjB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKA,SAAS,CAACC,GAAV,CAAcC,QAAQ,IACnB,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADH,CADL,CADJ,EAQI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARJ,CADJ,C,CAcA;AACA;AACA;;;AAEA,MAAME,eAAe,GAAGC,KAAK,KAAI;AAC7BL,EAAAA,SAAS,EAAGF,eAAe,CAACO,KAAD;AADE,CAAJ,CAA7B;;AAKA,eAAeT,OAAO,CAACQ,eAAD,CAAP,CAAyBL,YAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport './cart-dropdown.style.scss';\r\nimport { connect } from 'react-redux';\r\nimport CartItem from '../cart-item/cart-item.components';\r\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\r\n\r\n\r\nconst CartDropDown = ({cartItems}) => (\r\n    <div className='cart-dropdown'>\r\n        <div className='cart-items'>\r\n            {cartItems.map(cartItem => (\r\n                <CartItem key={cartItem.id} item={cartItem} />\r\n            ))\r\n\r\n            }\r\n        </div>\r\n        <CustomButton>GO TO CHECKOUT</CustomButton>\r\n    </div>\r\n)\r\n\r\n\r\n// const mapStateToProps = ({cart: {cartItems}}) =>({\r\n//     cartItems\r\n// });  this is replaced with the new code so that our application do not rerender(reload) when a state change in the app that does not affect this particular state /// this is what selectors are for..\r\n\r\nconst mapStateToProps = state =>({\r\n    cartItems : selectCartItems(state)\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(CartDropDown);"]},"metadata":{},"sourceType":"module"}