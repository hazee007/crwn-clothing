{"ast":null,"code":"import CartItem from \"../../components/cart-item/cart-item.components\";\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(cartItems => cartItem.id === cartItemToRemove.id);\n\n  if (existingCartItem.quantity === 1) {\n    return cartItem.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? { ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/ECommerce/crwn-clothing/src/redux/cart/cart.utils.js"],"names":["CartItem","addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","cartItemToRemove","filter"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,iDAArB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA6B;AACtD,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAC5CA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADT,CAAzB;;AAGI,MAAGH,gBAAH,EAAoB;AAChB,WAAOF,SAAS,CAACM,GAAV,CAAcF,QAAQ,IACzBA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,GACE,EAAC,GAAGD,QAAJ;AAAcG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAkB;AAA1C,KADF,GAEEH,QAHC,CAAP;AAIH;;AAED,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAC,GAAGC,aAAJ;AAAmBM,IAAAA,QAAQ,EAAE;AAA7B,GAAf,CAAP;AACP,CAZM;AAcP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,gBAAZ,KAAiC;AAC/D,QAAMP,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACrBH,SAAS,IAAII,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EADzB,CAAzB;;AAIA,MAAGH,gBAAgB,CAACK,QAAjB,KAA8B,CAAjC,EAAmC;AAC/B,WAAOH,QAAQ,CAACM,MAAT,CAAgBN,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAA7D,CAAP;AACH;;AAED,SAAOL,SAAS,CAACM,GAAV,CAAcF,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAAjC,GAC/B,EAAC,GAAGD,QAAJ;AAAcG,IAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAmB;AAA3C,GAD+B,GAE7BH,QAFG,CAAP;AAIH,CAbM","sourcesContent":["import CartItem from \"../../components/cart-item/cart-item.components\";\r\n\r\nexport const addItemToCart = (cartItems, cartItemToAdd) =>{\r\n    const existingCartItem = cartItems.find(cartItem => \r\n        cartItem.id === cartItemToAdd.id);\r\n\r\n        if(existingCartItem){\r\n            return cartItems.map(cartItem =>\r\n                cartItem.id === cartItemToAdd.id\r\n                ? {...cartItem, quantity: cartItem.quantity+1 }\r\n                : cartItem)\r\n        }\r\n\r\n        return [...cartItems, {...cartItemToAdd, quantity: 1}]\r\n}\r\n\r\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\r\n    const existingCartItem = cartItems.find(\r\n        cartItems => cartItem.id === cartItemToRemove.id\r\n    )\r\n\r\n    if(existingCartItem.quantity === 1){\r\n        return cartItem.filter(cartItem => cartItem.id !== cartItemToRemove.id)\r\n    }\r\n\r\n    return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ?\r\n      {...cartItem, quantity: cartItem.quantity -1} \r\n      : cartItem\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}