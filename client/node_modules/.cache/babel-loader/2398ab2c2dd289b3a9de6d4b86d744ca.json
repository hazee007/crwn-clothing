{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\ECommerce\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../collection/collection.components';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport { connect } from 'react-redux';\nimport WithSpinner from '../../components/with-spinner/with-spinner.components';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collection');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapShot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapShot);\n      updateCollections(collectionMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: prop => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: prop => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionMap => dispatch(updateCollections(collectionMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/user/Desktop/ECommerce/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","CollectionOverview","Route","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","connect","WithSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapShot","collectionMap","setState","render","match","path","prop","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,uDAAxB;AAGA,MAAMC,6BAA6B,GAAGD,WAAW,CAACP,kBAAD,CAAjD;AACA,MAAMS,yBAAyB,GAAGF,WAAW,CAACL,cAAD,CAA7C;;AAEA,MAAMQ,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC9B;AACLC,MAAAA,OAAO,EAAG;AADL,KAD8B;AAAA,SAKrCC,uBALqC,GAKX,IALW;AAAA;;AAQrCC,EAAAA,iBAAiB,GAAE;AACjB,UAAM;AAACV,MAAAA;AAAD,QAAsB,KAAKW,KAAjC;AACA,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,YAArB,CAAtB;AAEA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAiB;AACzE,YAAMC,aAAa,GAAGjB,+BAA+B,CAACgB,QAAD,CAArD;AACAf,MAAAA,iBAAiB,CAACgB,aAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAG;AAAX,OAAd;AACC,KAJ8B,CAA/B;AAKD;;AACDU,EAAAA,MAAM,GAAE;AACN,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKR,KAArB;AACA,UAAM;AAACH,MAAAA;AAAD,QAAY,KAAKD,KAAvB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAAjC;AAAqC,MAAA,MAAM,EAAGC,IAAD,IAC7C,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEb;AAA1C,SAAuD,KAAKG,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAGC,IAAD,IACpD,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEb;AAAtC,SAAmD,KAAKG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAQD;;AA7BoC;;AAgCvC,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACtCvB,EAAAA,iBAAiB,EAAEgB,aAAa,IAAIO,QAAQ,CAACvB,iBAAiB,CAACgB,aAAD,CAAlB;AADN,CAAL,CAAnC;;AAOA,eAAef,OAAO,CAAC,IAAD,EAAMqB,kBAAN,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport CollectionPage from '../collection/collection.components';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\nimport { updateCollections } from '../../redux/shop/shop.actions';\r\nimport { connect } from 'react-redux';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.components';\r\n\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n  state ={\r\n    loading : true\r\n  }\r\n\r\n  unsubscribeFromSnapshot = null;\r\n\r\n\r\n  componentDidMount(){\r\n    const {updateCollections} = this.props\r\n    const collectionRef = firestore.collection('collection')\r\n    \r\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapShot =>{\r\n    const collectionMap = convertCollectionsSnapshotToMap(snapShot);\r\n    updateCollections(collectionMap);\r\n    this.setState({loading : false})\r\n    });\r\n  }\r\n  render(){\r\n    const {match} = this.props\r\n    const {loading} = this.state\r\n    return(\r\n      <div className='shop-page'>\r\n        <Route exact path={`${match.path}`}  render={(prop) => \r\n        <CollectionOverviewWithSpinner isLoading={loading} {...this.props} />} />\r\n        <Route path={`${match.path}/:collectionId`} render={(prop) => \r\n        <CollectionPageWithSpinner isLoading={loading} {...this.props} />} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateCollections: collectionMap => dispatch(updateCollections(collectionMap))\r\n})\r\n\r\n \r\n\r\n\r\nexport default connect(null,mapDispatchToProps) (ShopPage);"]},"metadata":{},"sourceType":"module"}