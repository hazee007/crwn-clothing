{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\ECommerce\\\\crwn-clothing\\\\client\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.components';\nimport { Route } from 'react-router-dom';\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\nimport { connect } from 'react-redux';\nimport WithSpinner from '../../components/with-spinner/with-spinner.components';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selector';\nimport { useEffect } from 'react';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({\n  fetchCollectionsStart,\n  match,\n  isCollectionFetching,\n  isCollectionsLoaded\n}) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]);\n  return React.createElement(\"div\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    render: props => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n      isLoading: isCollectionFetching\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n      isLoading: !isCollectionsLoaded\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/user/Desktop/ECommerce/crwn-clothing/client/src/pages/shop/shop.component.jsx"],"names":["React","CollectionOverview","CollectionPage","Route","fetchCollectionsStart","connect","WithSpinner","createStructuredSelector","selectIsCollectionFetching","selectIsCollectionsLoaded","useEffect","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","match","isCollectionFetching","isCollectionsLoaded","path","props","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,SAASC,qBAAT,QAAsC,+BAAtC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,uDAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,0BAAT,EAAqCC,yBAArC,QAAsE,gCAAtE;AACA,SAASC,SAAT,QAA0B,OAA1B;AAGA,MAAMC,6BAA6B,GAAGL,WAAW,CAACL,kBAAD,CAAjD;AACA,MAAMW,yBAAyB,GAAGN,WAAW,CAACJ,cAAD,CAA7C;;AAEA,MAAMW,QAAQ,GAAE,CAAC;AAACT,EAAAA,qBAAD;AAAuBU,EAAAA,KAAvB;AAA8BC,EAAAA,oBAA9B;AAAoDC,EAAAA;AAApD,CAAD,KAA8E;AAG5FN,EAAAA,SAAS,CAAC,MAAI;AACZN,IAAAA,qBAAqB;AACtB,GAFQ,EAEN,CAACA,qBAAD,CAFM,CAAT;AAKE,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAEU,KAAK,CAACG,IAAK,EAAjC;AAAqC,IAAA,MAAM,EAAGC,KAAD,IAC7C,oBAAC,6BAAD;AAA+B,MAAA,SAAS,EAAEH;AAA1C,OAAoEG,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEJ,KAAK,CAACG,IAAK,gBAA3B;AAA4C,IAAA,MAAM,EAAGC,KAAD,IACpD,oBAAC,yBAAD;AAA2B,MAAA,SAAS,EAAE,CAACF;AAAvC,OAAgEE,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAQD,CAhBH;;AAkBA,MAAMC,eAAe,GAAGZ,wBAAwB,CAAC;AAC/CQ,EAAAA,oBAAoB,EAAGP,0BADwB;AAE/CQ,EAAAA,mBAAmB,EAAGP;AAFyB,CAAD,CAAhD;;AAKA,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACtCjB,EAAAA,qBAAqB,EAAE,MAAMiB,QAAQ,CAACjB,qBAAqB,EAAtB;AADC,CAAL,CAAnC;;AAOA,eAAeC,OAAO,CAACc,eAAD,EAAiBC,kBAAjB,CAAP,CAA6CP,QAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\r\nimport CollectionPage from '../collection/collection.components'\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\r\nimport { connect } from 'react-redux';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.components';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selector';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nconst ShopPage =({fetchCollectionsStart,match, isCollectionFetching, isCollectionsLoaded}) => {\r\n  \r\n\r\n  useEffect(()=>{\r\n    fetchCollectionsStart();\r\n  }, [fetchCollectionsStart])\r\n\r\n \r\n    return(\r\n      <div className='shop-page'>\r\n        <Route exact path={`${match.path}`}  render={(props) => \r\n        <CollectionOverviewWithSpinner isLoading={isCollectionFetching} {...props} />} />\r\n        <Route path={`${match.path}/:collectionId`} render={(props) => \r\n        <CollectionPageWithSpinner isLoading={!isCollectionsLoaded} {...props} />} />\r\n      </div>\r\n    )\r\n  }\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isCollectionFetching : selectIsCollectionFetching,\r\n  isCollectionsLoaded : selectIsCollectionsLoaded\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\r\n})\r\n\r\n \r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps) (ShopPage);"]},"metadata":{},"sourceType":"module"}