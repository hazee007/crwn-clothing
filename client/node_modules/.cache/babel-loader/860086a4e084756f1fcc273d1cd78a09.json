{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionAsync() {\n  try {\n    const collectionRef = firestore.collection('collection');\n    const snapShot = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionsSnapshotToMap, snapShot);\n    yield put(fetchCollectionsSuccess(collectionMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionStart)]);\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/ECommerce/crwn-clothing/client/src/redux/shop/shop.saga.js"],"names":["takeLatest","call","put","all","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionAsync","collectionRef","collection","snapShot","get","collectionMap","error","message","fetchCollectionStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,GAA/B,QAAyC,oBAAzC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAO,UAAUC,oBAAV,GAAgC;AAEnC,MAAI;AACA,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,YAArB,CAAtB;AACA,UAAQC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAzB;AACA,UAAMC,aAAa,GAAG,MAAMb,IAAI,CAAEK,+BAAF,EAAkCM,QAAlC,CAAhC;AACA,UAAMV,GAAG,CAACK,uBAAuB,CAACO,aAAD,CAAxB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMb,GAAG,CAAEM,uBAAuB,CAACO,KAAK,CAACC,OAAP,CAAzB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,oBAAV,GAAgC;AACnC,QAAMjB,UAAU,CAACI,eAAe,CAACc,uBAAjB,EACXT,oBADW,CAAhB;AAEH;AAED,OAAO,UAAUU,SAAV,GAAqB;AACxB,QAAMhB,GAAG,CAAC,CAACF,IAAI,CAACgB,oBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest, call, put, all} from 'redux-saga/effects';\r\nimport ShopActionTypes from './shop.types';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\r\n\r\nexport function* fetchCollectionAsync(){\r\n\r\n    try {\r\n        const collectionRef = firestore.collection('collection');\r\n        const   snapShot = yield collectionRef.get();\r\n        const collectionMap = yield call (convertCollectionsSnapshotToMap,snapShot);\r\n        yield put(fetchCollectionsSuccess(collectionMap));\r\n    } catch (error) {\r\n        yield put (fetchCollectionsFailure(error.message))\r\n    }\r\n}\r\n\r\nexport function* fetchCollectionStart(){\r\n    yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START,\r\n         fetchCollectionAsync );\r\n}\r\n\r\nexport function* shopSagas(){\r\n    yield all([call(fetchCollectionStart)])\r\n}"]},"metadata":{},"sourceType":"module"}