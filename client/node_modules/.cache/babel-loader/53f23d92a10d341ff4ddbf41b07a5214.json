{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\ECommerce\\\\crwn-clothing\\\\client\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport './sign-in.style.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const [userCredentials, SetuserCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials; // preventing the default action of the submit form and setting email and password back to empty\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  }; // this is to dynamically get the name and value from the form input items\n\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    SetuserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Sign in \"), React.createElement(CustomButton, {\n    type: \"button\",\n    isGoogleSignIn: true,\n    onClick: googleSignInStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Sign in with Google \"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/user/Desktop/ECommerce/crwn-clothing/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","FormInput","CustomButton","connect","googleSignInStart","emailSignInStart","SignIn","userCredentials","SetuserCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,sBAAP;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,iBAAR,EAA2BC,gBAA3B,QAAmD,+BAAnD;;AAIA,MAAOC,MAAM,GAAE,CAAC;AAACD,EAAAA,gBAAD;AAAmBD,EAAAA;AAAnB,CAAD,KAA2C;AACtD,QAAM,CAACG,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC;AACnDS,IAAAA,KAAK,EAAE,EAD4C;AAEnDC,IAAAA,QAAQ,EAAE;AAFyC,GAAD,CAAtD;AAMA,QAAM;AAACD,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAoBH,eAA1B,CAPsD,CAQtD;;AACA,QAAMI,YAAY,GAAG,MAAMC,KAAN,IAAc;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AACAR,IAAAA,gBAAgB,CAACI,KAAD,EAAQC,QAAR,CAAhB;AAEH,GAJD,CATsD,CActD;;;AACA,QAAMI,YAAY,GAAGF,KAAK,IAAG;AACzB,UAAM;AAACG,MAAAA,KAAD;AAAOC,MAAAA;AAAP,QAAeJ,KAAK,CAACK,MAA3B;AAEAT,IAAAA,kBAAkB,CAAC,EAAC,GAAGD,eAAJ;AAAqB,OAACS,IAAD,GAAQD;AAA7B,KAAD,CAAlB;AACH,GAJD;;AAOI,SACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFJ,EAII;AAAM,IAAA,QAAQ,EAAEJ,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,OAAhB;AAAwB,IAAA,IAAI,EAAC,OAA7B;AAAqC,IAAA,KAAK,EAAGF,KAA7C;AAAoD,IAAA,YAAY,EAAEK,YAAlE;AAAgF,IAAA,KAAK,EAAC,OAAtF;AAA8F,IAAA,QAAQ,MAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,UAAhB;AAA2B,IAAA,IAAI,EAAC,UAAhC;AAA2C,IAAA,KAAK,EAAGJ,QAAnD;AAA6D,IAAA,YAAY,EAAEI,YAA3E;AAAyF,IAAA,KAAK,EAAC,UAA/F;AAA0G,IAAA,QAAQ,MAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,cAAc,MAA1C;AAA2C,IAAA,OAAO,EAAEV,iBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,CAHJ,CAJJ,CADJ;AAeH,CArCL;;AAyCA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAI;AACnCf,EAAAA,iBAAiB,EAAE,MAAMe,QAAQ,CAACf,iBAAiB,EAAlB,CADE;AAEnCC,EAAAA,gBAAgB,EAAG,CAACI,KAAD,EAAQC,QAAR,KAAqBS,QAAQ,CAACd,gBAAgB,CAAC;AAACI,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD,CAAjB;AAFb,CAAJ,CAAnC;;AAKA,eAAeP,OAAO,CAAC,IAAD,EAAOe,kBAAP,CAAP,CAAmCZ,MAAnC,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport './sign-in.style.scss';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport { connect } from 'react-redux';\r\nimport {googleSignInStart, emailSignInStart} from  '../../redux/user/user.actions'\r\n\r\n\r\n\r\nconst  SignIn =({emailSignInStart, googleSignInStart}) => {\r\n    const [userCredentials, SetuserCredentials] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n  \r\n\r\n    const {email, password} = userCredentials;\r\n    // preventing the default action of the submit form and setting email and password back to empty\r\n    const handleSubmit = async event =>{\r\n        event.preventDefault();\r\n        emailSignInStart(email, password);\r\n        \r\n    };\r\n    // this is to dynamically get the name and value from the form input items\r\n    const handleChange = event =>{\r\n        const {value,name} = event.target;\r\n\r\n        SetuserCredentials({...userCredentials, [name]: value});\r\n    };\r\n   \r\n\r\n        return(\r\n            <div className='sign-in'>\r\n                <h2>I already have an account</h2>\r\n                <span>Sign in with your email and password</span>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <FormInput type='email' name='email' value ={email} handleChange={handleChange} label='email' required />\r\n                    <FormInput type='password' name='password' value ={password} handleChange={handleChange} label='password' required />\r\n                    <div className='buttons'>\r\n                        <CustomButton type='submit'>Sign in </CustomButton>\r\n                        <CustomButton type='button' isGoogleSignIn onClick={googleSignInStart} >Sign in with Google </CustomButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart : (email, password) => dispatch(emailSignInStart({email, password}))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps) (SignIn);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}