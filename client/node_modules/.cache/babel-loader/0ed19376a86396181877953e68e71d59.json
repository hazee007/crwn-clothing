{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInFailure, emailSignInSuccess } from './user.actions';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  email,\n  password\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    console.log(user);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/ECommerce/crwn-clothing/src/redux/user/user-saga.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","googleSignInSuccess","googleSignInFailure","emailSignInFailure","emailSignInSuccess","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","signInWithEmail","email","password","signInWithEmailAndPassword","console","log","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,IAAR,EAAcC,cAAd,EAA8BC,yBAA9B,QAA8D,+BAA9D;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,kBAAnD,EAAuEC,kBAAvE,QAAiG,gBAAjG;AAKA,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMR,IAAI,CAACS,eAAL,CAAqBR,cAArB,CAArB;AACA,UAAMS,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACO,mBAAmB,CAAC;AAACU,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CAApB,CAAT;AAEH,GAND,CAME,OAAOC,KAAP,EAAc;AACZ,UAAMnB,GAAG,CAACQ,mBAAmB,CAACW,KAAD,CAApB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,eAAV,CAA2B;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAA3B,EAA8C;AAEjD,MAAI;AACA,UAAM;AAACV,MAAAA;AAAD,QAAS,MAAMR,IAAI,CAACmB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAArB;AACCE,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACD,UAAME,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACU,kBAAkB,CAAC;AAACO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CAAnB,CAAT;AAEH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZ,UAAMnB,GAAG,CAACS,kBAAkB,CAACU,KAAD,CAAnB,CAAT;AACH;AACJ;AAED,OAAO,UAAUO,mBAAV,GAAgC;AACnC,QAAM3B,UAAU,CAACI,eAAe,CAACwB,oBAAjB,EAAsChB,gBAAtC,CAAhB;AACH;AAED,OAAO,UAAUiB,kBAAV,GAA8B;AACjC,QAAM7B,UAAU,CAACI,eAAe,CAAC0B,mBAAjB,EAAsCT,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUU,SAAV,GAAqB;AACxB,QAAM7B,GAAG,CAAC,CAACC,IAAI,CAACwB,mBAAD,CAAL,EAA4BxB,IAAI,CAAC0B,kBAAD,CAAhC,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects';\r\nimport UserActionTypes from './user.types';\r\nimport {auth, googleProvider, createUserProfileDocument} from '../../firebase/firebase.utils';\r\nimport { googleSignInSuccess, googleSignInFailure, emailSignInFailure, emailSignInSuccess } from './user.actions';\r\n\r\n\r\n\r\n\r\nexport function* signInWithGoogle(){\r\n    try {\r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        const userRef = yield call(createUserProfileDocument, user); \r\n        const userSnapshot = yield userRef.get();\r\n        yield put(googleSignInSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\r\n\r\n    } catch (error) {\r\n        yield put(googleSignInFailure(error)); \r\n    }\r\n}\r\n\r\nexport function* signInWithEmail( {email, password} ){\r\n    \r\n    try {\r\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\r\n         console.log(user);\r\n        const userRef = yield call(createUserProfileDocument, user); \r\n        const userSnapshot = yield userRef.get();\r\n        yield put(emailSignInSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\r\n\r\n    } catch (error) {\r\n        yield put(emailSignInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,signInWithGoogle)\r\n}\r\n\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\nexport function* userSagas(){\r\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart)])\r\n}"]},"metadata":{},"sourceType":"module"}