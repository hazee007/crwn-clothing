{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\ECommerce\\\\crwn-clothing\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport HomePage from './pages/homepage/homepage.components';\nimport { Route, Switch } from 'react-router-dom';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './redux/user.actions';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.unsubscribeFromAuth = null;\n    this.state = {\n      currentUser: null\n    };\n  }\n\n  componentDidMount() {\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      // getting data from firebase to add into our state\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth); //checking if there has been any user update in db \n\n        userRef.onSnapshot(snapShot => {\n          //get data of either newly registerd user with already users in db\n          this.setState({\n            currentUser: {\n              id: snapShot.id,\n              ...snapShot.data()\n            }\n          });\n        });\n      } else {\n        this.setState({\n          currentUser: userAuth\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signin\",\n      component: SignInAndSignUpPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(null, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/user/Desktop/ECommerce/crwn-clothing/src/App.js"],"names":["React","HomePage","Route","Switch","ShopPage","Header","SignInAndSignUpPage","auth","createUserProfileDocument","connect","setCurrentUser","App","Component","constructor","unsubscribeFromAuth","state","currentUser","componentDidMount","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","setState","id","data","componentWillUnmount","render","mapDispatchToProps","dispatch","user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,SAAQC,IAAR,EAAcC,yBAAd,QAA8C,2BAA9C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,cAAR,QAA6B,sBAA7B;;AAGA,MAAMC,GAAN,SAAkBX,KAAK,CAACY,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAE;AACX;AADW,SAQbC,mBARa,GAQS,IART;AAGX,SAAKC,KAAL,GAAY;AACVC,MAAAA,WAAW,EAAE;AADH,KAAZ;AAGD;;AAIDC,EAAAA,iBAAiB,GAAE;AACjB,SAAKH,mBAAL,GAA2BP,IAAI,CAACW,kBAAL,CAAyB,MAAMC,QAAN,IAAiB;AACnE;AACA,UAAGA,QAAH,EAAY;AACV,cAAMC,OAAO,GAAG,MAAMZ,yBAAyB,CAACW,QAAD,CAA/C,CADU,CACiD;;AAE3DC,QAAAA,OAAO,CAACC,UAAR,CAAmBC,QAAQ,IAAG;AAAG;AAC/B,eAAKC,QAAL,CAAc;AACZP,YAAAA,WAAW,EAAC;AACVQ,cAAAA,EAAE,EAAEF,QAAQ,CAACE,EADH;AAEV,iBAAGF,QAAQ,CAACG,IAAT;AAFO;AADA,WAAd;AAMD,SAPD;AAQD,OAXD,MAYK;AACH,aAAKF,QAAL,CAAc;AAACP,UAAAA,WAAW,EAAGG;AAAf,SAAd;AACD;AAEF,KAlB0B,CAA3B;AAmBD;;AAEDO,EAAAA,oBAAoB,GAAE;AACnB,SAAKZ,mBAAL;AACF;;AACDa,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAE1B,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,KAAD;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,SAAS,EAAEG,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA,oBAAC,KAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,SAAS,EAAEE,mBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,CAFF,CADF;AAUD;;AA/C+B;;AAkDlC,MAAMsB,kBAAkB,GAAGC,QAAQ,KAAI;AACrCnB,EAAAA,cAAc,EAAEoB,IAAI,IAAID,QAAQ,CAACnB,cAAc,CAACoB,IAAD,CAAf;AADK,CAAJ,CAAnC;;AAIA,eAAerB,OAAO,CAAC,IAAD,EAAOmB,kBAAP,CAAP,CAAmCjB,GAAnC,CAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport HomePage from './pages/homepage/homepage.components';\nimport { Route, Switch } from 'react-router-dom';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport {auth, createUserProfileDocument} from './firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport {setCurrentUser} from './redux/user.actions'\n\n\nclass App extends React.Component {\n  constructor(){\n    super();\n\n    this.state ={\n      currentUser: null\n    }\n  }\n\n  unsubscribeFromAuth = null\n\n  componentDidMount(){\n    this.unsubscribeFromAuth = auth.onAuthStateChanged( async userAuth =>{\n      // getting data from firebase to add into our state\n      if(userAuth){\n        const userRef = await createUserProfileDocument(userAuth); //checking if there has been any user update in db \n        \n        userRef.onSnapshot(snapShot =>{  //get data of either newly registerd user with already users in db\n          this.setState({\n            currentUser:{\n              id: snapShot.id,\n              ...snapShot.data()\n            }\n          })\n        })\n      }\n       else{\n        this.setState({currentUser : userAuth})\n      }\n        \n    })\n  }\n  \n  componentWillUnmount(){\n     this.unsubscribeFromAuth();\n  }\n  render(){\n    return (\n      <div >\n        <Header />\n        <Switch>\n        <Route exact path='/' component={HomePage} />\n        <Route  path='/shop' component={ShopPage} />\n        <Route  path='/signin' component={SignInAndSignUpPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch =>({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n})\n\nexport default connect(null, mapDispatchToProps) (App);\n"]},"metadata":{},"sourceType":"module"}