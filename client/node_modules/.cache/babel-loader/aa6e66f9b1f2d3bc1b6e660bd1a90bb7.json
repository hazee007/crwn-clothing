{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\ECommerce\\\\crwn-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React from 'react';\nimport './sign-in.style.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signInWithGoogle, auth } from '../../firebase/firebase.utils';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handelSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handelChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: name,\n        [value]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  } // preventing the default action of the submit form and setting email and password back to empty\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"I already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handelSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"email\",\n      name: \"\",\n      value: this.state.email,\n      handelChange: this.handelChange,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"\",\n      value: this.state.password,\n      handelChange: this.handelChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Sign in \"), React.createElement(CustomButton, {\n      isGoogleSignIn: true,\n      onClick: signInWithGoogle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Sign in with Google \"))));\n  }\n\n}\n\nexport default SignIn;","map":{"version":3,"sources":["C:/Users/user/Desktop/ECommerce/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","FormInput","CustomButton","signInWithGoogle","auth","SignIn","Component","constructor","props","handelSubmit","event","preventDefault","email","password","state","signInWithEmailAndPassword","setState","error","console","log","handelChange","value","name","target","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAAQC,gBAAR,EAA0BC,IAA1B,QAAqC,+BAArC;;AAIA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAUlBC,YAVkB,GAUH,MAAMC,KAAN,IAAc;AACzBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAACC,QAAAA,KAAD;AAAQC,QAAAA;AAAR,UAAoB,KAAKC,KAA/B;;AAEA,UAAI;AACA,cAAMV,IAAI,CAACW,0BAAL,CAAgCH,KAAhC,EAAsCC,QAAtC,CAAN;AACA,aAAKG,QAAL,CAAc;AAACJ,UAAAA,KAAK,EAAE,EAAR;AAAYC,UAAAA,QAAQ,EAAC;AAArB,SAAd;AACH,OAHD,CAGE,OAAOI,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,KApBiB;;AAAA,SAsBlBG,YAtBkB,GAsBHV,KAAK,IAAG;AACnB,YAAM;AAACW,QAAAA,KAAD;AAAOC,QAAAA;AAAP,UAAeZ,KAAK,CAACa,MAA3B;AAEA,WAAKP,QAAL,CAAc;AAAC,SAACM,IAAD,GAAQA,IAAT;AAAe,SAACD,KAAD,GAASA;AAAxB,OAAd;AACH,KA1BiB;;AAGd,SAAKP,KAAL,GAAW;AACPF,MAAAA,KAAK,EAAE,EADA;AAEPC,MAAAA,QAAQ,EAAE;AAFH,KAAX;AAIH,GAR+B,CAUhC;;;AAkBAW,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFJ,EAII;AAAM,MAAA,QAAQ,EAAE,KAAKf,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,OAAhB;AAAwB,MAAA,IAAI,EAAC,EAA7B;AAAgC,MAAA,KAAK,EAAG,KAAKK,KAAL,CAAWF,KAAnD;AAA0D,MAAA,YAAY,EAAE,KAAKQ,YAA7E;AAA2F,MAAA,KAAK,EAAC,OAAjG;AAAyG,MAAA,QAAQ,MAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,UAAhB;AAA2B,MAAA,IAAI,EAAC,EAAhC;AAAmC,MAAA,KAAK,EAAG,KAAKN,KAAL,CAAWD,QAAtD;AAAgE,MAAA,YAAY,EAAE,KAAKO,YAAnF;AAAiG,MAAA,KAAK,EAAC,UAAvG;AAAkH,MAAA,QAAQ,MAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,YAAD;AAAc,MAAA,cAAc,MAA5B;AAA6B,MAAA,OAAO,EAAEjB,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFJ,CAHJ,CAJJ,CADJ;AAeH;;AA5C+B;;AAgDpC,eAAeE,MAAf","sourcesContent":["import React from 'react';\r\nimport './sign-in.style.scss';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport {signInWithGoogle, auth} from '../../firebase/firebase.utils'\r\n\r\n\r\n\r\nclass SignIn extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    // preventing the default action of the submit form and setting email and password back to empty\r\n    handelSubmit = async event =>{\r\n        event.preventDefault();\r\n        const {email, password} = this.state;\r\n\r\n        try {\r\n            await auth.signInWithEmailAndPassword(email,password);\r\n            this.setState({email: '', password:''})\r\n        } catch (error) {\r\n            console.log(error)             \r\n        }\r\n    };\r\n    // this is to dynamically get the name and value from the form input items\r\n    handelChange = event =>{\r\n        const {value,name} = event.target;\r\n\r\n        this.setState({[name]: name, [value]: value});\r\n    };\r\n    render(){\r\n        return(\r\n            <div className='sign-in'>\r\n                <h2>I already have an account</h2>\r\n                <span>Sign in with your email and password</span>\r\n\r\n                <form onSubmit={this.handelSubmit}>\r\n                    <FormInput type='email' name='' value ={this.state.email} handelChange={this.handelChange} label='Email' required />\r\n                    <FormInput type='password' name='' value ={this.state.password} handelChange={this.handelChange} label='Password' required />\r\n                    <div className='buttons'>\r\n                        <CustomButton type='submit'>Sign in </CustomButton>\r\n                        <CustomButton isGoogleSignIn onClick={signInWithGoogle} >Sign in with Google </CustomButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default SignIn;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}